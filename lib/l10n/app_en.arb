{
  "appTitle": "BitBlik",
  "greeting": "Hello!",
  "@appTitle": {
    "description": "The title of the application"
  },
  "@greeting": {
    "description": "A simple greeting"
  },
  "error": "Error",
  "@error": {
    "description": "Generic error title"
  },
  "errorLoadingOffer": "Error loading offer: {error}",
  "@errorLoadingOffer": {
    "description": "Error message when loading offer details fails",
    "placeholders": {
      "error": {}
    }
  },
  "errorOfferDetailsMissing": "Error: Offer details missing or invalid.",
  "@errorOfferDetailsMissing": {
    "description": "Displayed when offer details are missing or invalid"
  },
  "errorOfferNotFound": "Error: Offer not found.",
  "@errorOfferNotFound": {
    "description": "Error message when the specific offer cannot be found"
  },
  "waitingForBlik": "Waiting for BLIK",
  "@waitingForBlik": {
    "description": "AppBar title when waiting for BLIK code"
  },
  "offerReservedByTaker": "Offer Reserved by Taker!",
  "@offerReservedByTaker": {
    "description": "Displayed when offer is reserved by taker"
  },
  "waitingForTakerBlik": "Waiting for Taker to submit their BLIK code.",
  "@waitingForTakerBlik": {
    "description": "Displayed while waiting for taker to submit BLIK code"
  },
  "takerHas20Seconds": "Taker has 20 seconds to provide the code.",
  "@takerHas20Seconds": {
    "description": "Displayed to indicate taker has 20 seconds"
  },
  "takerHasXSecondsToProvideBlik": "Taker has {seconds} seconds to provide BLIK code.",
  "@takerHasXSecondsToProvideBlik": {
    "placeholders": {
      "seconds": {
        "type": "int"
      }
    }
  },
  "goHome": "Go Home",
  "@goHome": {
    "description": "Tooltip for home button"
  },
  "errorActiveOfferDetailsLost": "Error: Active offer details lost.",
  "@errorActiveOfferDetailsLost": {
    "description": "Displayed when active offer details are lost"
  },
  "errorFailedToRetrieveBlik": "Error: Failed to retrieve BLIK code.",
  "@errorFailedToRetrieveBlik": {
    "description": "Displayed when BLIK code retrieval fails"
  },
  "errorRetrievingBlik": "Error retrieving BLIK code: {details}",
  "@errorRetrievingBlik": {
    "description": "Displayed when there is an error retrieving BLIK code",
    "placeholders": {
      "details": {}
    }
  },
  "offerNoLongerAvailable": "Offer is no longer available (Status: {status}).",
  "@offerNoLongerAvailable": {
    "description": "Displayed when offer is no longer available",
    "placeholders": {
      "status": {}
    }
  },
  "yourOffer": "Your Offer:",
  "@yourOffer": {
    "description": "Label for user's offer"
  },
  "amountSats": "Amount: {amount} sats",
  "@amountSats": {
    "description": "Amount in sats",
    "placeholders": {
      "amount": {}
    }
  },
  "makerFeeSats": "Maker Fee: {fee} sats",
  "@makerFeeSats": {
    "description": "Maker's fee in sats",
    "placeholders": {
      "fee": {}
    }
  },
  "makerConfirmedPayment": "Maker confirmed payment.",
  "@makerConfirmedPayment": {
    "description": "Status message indicating the maker has confirmed the fiat payment"
  },
  "takerFeeSats": "Taker Fee: {fee} sats",
  "@takerFeeSats": {
    "description": "Taker's fee in sats",
    "placeholders": {
      "fee": {}
    }
  },
  "status": "Status: {status}",
  "@status": {
    "description": "Status of the offer",
    "placeholders": {
      "status": {}
    }
  },
  "waitingForTaker": "Waiting for a Taker to reserve your offer...",
  "@waitingForTaker": {
    "description": "Displayed while waiting for a taker"
  },
  "cancelOffer": "Cancel Offer",
  "@cancelOffer": {
    "description": "Button to cancel offer"
  },
  "errorCouldNotIdentifyOffer": "Error: Could not identify offer to cancel.",
  "@errorCouldNotIdentifyOffer": {
    "description": "Displayed when offer to cancel cannot be identified"
  },
  "offerCannotBeCancelled": "Offer cannot be cancelled in current state ({status}).",
  "@offerCannotBeCancelled": {
    "description": "Displayed when offer cannot be cancelled in current state",
    "placeholders": {
      "status": {}
    }
  },
  "offerCancelledSuccessfully": "Offer cancelled successfully.",
  "@offerCancelledSuccessfully": {
    "description": "Displayed when offer is cancelled successfully"
  },
  "failedToCancelOffer": "Failed to cancel offer: {details}",
  "@failedToCancelOffer": {
    "description": "Displayed when offer cancellation fails",
    "placeholders": {
      "details": {}
    }
  },
  "enterLightningAddress": "Enter your Lightning Address to continue",
  "@enterLightningAddress": {
    "description": "Prompt to enter Lightning Address"
  },
  "lightningAddressHint": "user@domain.com",
  "@lightningAddressHint": {
    "description": "Hint for Lightning Address input"
  },
  "lightningAddressLabel": "Lightning Address",
  "@lightningAddressLabel": {
    "description": "Label for Lightning Address input"
  },
  "lightningAddressInvalid": "Please enter a valid Lightning Address",
  "@lightningAddressInvalid": {
    "description": "Validation error for Lightning Address"
  },
  "saveAndContinue": "Save & Continue",
  "@saveAndContinue": {
    "description": "Button to save and continue"
  },
  "editLightningAddress": "Edit Lightning Address",
  "@editLightningAddress": {
    "description": "Dialog title for editing Lightning Address"
  },
  "cancel": "Cancel",
  "@cancel": {
    "description": "Cancel button"
  },
  "doneButton": "Done",
  "@doneButton": {
    "description": "Button text for completing a process"
  },
  "save": "Save",
  "@save": {
    "description": "Save button"
  },
  "lightningAddressSaved": "Lightning Address saved!",
  "@lightningAddressSaved": {
    "description": "Snackbar message when Lightning Address is saved"
  },
  "lightningAddressUpdated": "Lightning Address updated!",
  "@lightningAddressUpdated": {
    "description": "Snackbar message when Lightning Address is updated"
  },
  "loadingOfferDetails": "Loading offer details...",
  "@loadingOfferDetails": {
    "description": "Text shown while loading offer details"
  },
  "errorSavingAddress": "Error saving address: {details}",
  "@errorSavingAddress": {
    "description": "Snackbar message when saving Lightning Address fails",
    "placeholders": {
      "details": {}
    }
  },
  "getNotifiedSimplex": "Get notified of new orders with SimpleX",
  "@getNotifiedSimplex": {
    "description": "SimpleX notification prompt"
  },
  "getNotifiedWithElement": "Get notified of new orders with Element",
  "@getNotifiedWithElement": {
    "description": "Text for the link to join the Element/Matrix notification channel"
  },
  "noOffersAvailable": "No offers available yet.",
  "@noOffersAvailable": {
    "description": "Displayed when there are no offers"
  },
  "take": "TAKE",
  "@take": {
    "description": "Button to take an offer"
  },
  "resume": "RESUME",
  "@resume": {
    "description": "Button to resume an offer"
  },
  "offerAmountSats": "Amount: {amount} sats",
  "@offerAmountSats": {
    "description": "Offer amount in sats",
    "placeholders": {
      "amount": {}
    }
  },
  "offerFeeStatusId": "Taker Fee: {fee} sats | Status: {status}",
  "@offerFeeStatusId": {
    "description": "Offer Taker fee, status, and ID",
    "placeholders": {
      "fee": {},
      "status": {}
    }
  },
  "finishedOffers": "Finished Offers",
  "@finishedOffers": {
    "description": "Section title for finished offers"
  },
  "errorLoadingOffers": "Error loading offers: {details}",
  "@errorLoadingOffers": {
    "description": "Error loading offers",
    "placeholders": {
      "details": {}
    }
  },
  "retry": "Retry",
  "@retry": {
    "description": "Retry button"
  },
  "errorOfferUnexpectedState": "Error: Offer is in an unexpected state.",
  "@errorOfferUnexpectedState": {
    "description": "Displayed when offer is in an unexpected state"
  },
  "errorPublicKeyNotLoaded": "Error: Public key not loaded yet.",
  "@errorPublicKeyNotLoaded": {
    "description": "Error when public key is missing for offer creation"
  },
  "errorInvalidNumberFormat": "Invalid number format",
  "@errorInvalidNumberFormat": {
    "description": "Validation error for number input"
  },
  "errorAmountMustBePositive": "Amount must be positive",
  "@errorAmountMustBePositive": {
    "description": "Validation error for non-positive amount"
  },
  "errorInvalidFeePercentage": "Invalid fee percentage",
  "@errorInvalidFeePercentage": {
    "description": "Validation error for fee input"
  },
  "errorInitiatingOffer": "Error initiating offer: {details}",
  "@errorInitiatingOffer": {
    "description": "Error message when initiating an offer fails",
    "placeholders": {
      "details": {}
    }
  },
  "enterAmountToPay": "Enter Amount (PLN) to Pay:",
  "@enterAmountToPay": {
    "description": "Label instructing user to enter PLN amount"
  },
  "amountLabel": "Amount (PLN)",
  "@amountLabel": {
    "description": "Label for the amount input field"
  },
  "fetchingExchangeRate": "Fetching exchange rate...",
  "@fetchingExchangeRate": {
    "description": "Text shown while fetching exchange rate"
  },
  "satsEquivalent": "≈ {sats} sats",
  "@satsEquivalent": {
    "description": "Displays the calculated sats equivalent",
    "placeholders": {
      "sats": {
        "type": "String"
      }
    }
  },
  "plnBtcRate": "PLN/BTC rate ≈ {rate}",
  "@plnBtcRate": {
    "description": "Displays the fetched PLN/BTC exchange rate",
    "placeholders": {
      "rate": {
        "type": "String"
      }
    }
  },
  "errorFetchingRate": "Could not fetch exchange rate.",
  "@errorFetchingRate": {
    "description": "Error message when fetching exchange rate fails"
  },
  "generateInvoice": "Generate Invoice",
  "@generateInvoice": {
    "description": "Button text to generate the invoice"
  },
  "payHoldInvoiceTitle": "Pay this Hold Invoice:",
  "@payHoldInvoiceTitle": {
    "description": "Title instructing the maker to pay the hold invoice"
  },
  "errorCouldNotOpenLightningApp": "Could not open Lightning app for invoice.",
  "@errorCouldNotOpenLightningApp": {
    "description": "Error shown when the Lightning app cannot be launched via URL"
  },
  "errorOpeningLightningApp": "Error opening Lightning app: {details}",
  "@errorOpeningLightningApp": {
    "description": "Error shown when launching the Lightning app fails",
    "placeholders": {
      "details": {}
    }
  },
  "copyInvoice": "Copy Invoice",
  "@copyInvoice": {
    "description": "Button text to copy the invoice"
  },
  "invoiceCopied": "Invoice copied to clipboard!",
  "@invoiceCopied": {
    "description": "Snackbar message confirming invoice copy"
  },
  "waitingForPaymentConfirmation": "Waiting for payment confirmation...",
  "@waitingForPaymentConfirmation": {
    "description": "Status text while polling for invoice payment"
  },
  "errorPublicKeyNotAvailable": "Public key not available.",
  "@errorPublicKeyNotAvailable": {
    "description": "Error when public key is needed but not found after payment"
  },
  "errorCouldNotFetchActiveOffer": "Could not fetch active offer details. It might have expired.",
  "@errorCouldNotFetchActiveOffer": {
    "description": "Error when fetching full offer details fails after payment"
  },
  "errorMissingPaymentHashOrKey": "Error: Missing payment hash or public key.",
  "@errorMissingPaymentHashOrKey": {
    "description": "Error shown when payment hash or public key is missing during confirmation"
  },
  "errorOfferIncorrectStateConfirmation": "Offer not in correct state for confirmation (Status: {status})",
  "@errorOfferIncorrectStateConfirmation": {
    "description": "Error shown when trying to confirm payment but offer is in wrong state",
    "placeholders": {
      "status": {}
    }
  },
  "paymentConfirmedTakerPaid": "Payment Confirmed! Taker will be paid.",
  "@paymentConfirmedTakerPaid": {
    "description": "Snackbar message after maker confirms payment"
  },
  "paymentProcessTitle": "Payment Process",
  "@paymentProcessTitle": {
    "description": "AppBar title for the payment process screen"
  },
  "errorConfirmingPayment": "Error confirming payment: {details}",
  "@errorConfirmingPayment": {
    "description": "Error shown when confirming maker payment fails",
    "placeholders": {
      "details": {}
    }
  },
  "blikCopied": "BLIK code copied to clipboard",
  "@blikCopied": {
    "description": "Snackbar message confirming BLIK code copy"
  },
  "retrievingBlikCode": "Retrieving BLIK code...",
  "@retrievingBlikCode": {
    "description": "Status text while waiting for BLIK code to be fetched"
  },
  "blikCodeReceivedTitle": "BLIK Code Received!",
  "@blikCodeReceivedTitle": {
    "description": "Title indicating BLIK code has been received"
  },
  "copyToClipboardTooltip": "Copy to clipboard",
  "@copyToClipboardTooltip": {
    "description": "Tooltip for the copy icon button"
  },
  "blikInstructionsMaker": "Enter this code into the payment terminal. Once the Taker confirms in their bank app and the payment succeeds, press Confirm below.",
  "@blikInstructionsMaker": {
    "description": "Instructions for the maker after receiving the BLIK code"
  },
  "confirmPaymentSuccessButton": "Confirm Payment Success",
  "@confirmPaymentSuccessButton": {
    "description": "Button text for maker to confirm successful payment"
  },
  "errorInvalidOfferStateReceived": "Error: Invalid offer state received.",
  "@errorInvalidOfferStateReceived": {
    "description": "Error when the screen receives an offer in an unexpected initial state"
  },
  "errorInternalOfferIncomplete": "Internal error: Offer details incomplete.",
  "@errorInternalOfferIncomplete": {
    "description": "Error when critical offer details (like payment hash) are missing"
  },
  "errorOfferInvalidStatus": "Offer has an invalid status.",
  "@errorOfferInvalidStatus": {
    "description": "Error when the offer status string is not a valid enum value"
  },
  "errorOfferNotAwaitingConfirmation": "Offer is no longer awaiting confirmation (Status: {status}).",
  "@errorOfferNotAwaitingConfirmation": {
    "description": "Message shown when polling reveals the offer is no longer in a waiting state",
    "placeholders": {
      "status": {}
    }
  },
  "errorUnexpectedStatusFromServer": "Received an unexpected offer status from the server.",
  "@errorUnexpectedStatusFromServer": {
    "description": "Error when the status string from the server is unknown"
  },
  "offerCancelledOrExpired": "Offer was cancelled or expired.",
  "@offerCancelledOrExpired": {
    "description": "Message shown when polling reveals the offer was cancelled or expired"
  },
  "paymentSuccessfulTaker": "Payment Successful! You should have now received the funds.",
  "@paymentSuccessfulTaker": {
    "description": "Snackbar message shown to the taker upon successful payment"
  },
  "paymentReceived": "Payment Received!",
  "@paymentReceived": {
    "description": "Status message indicating the Lightning payment has been received by the taker"
  },
  "preparingToSendPayment": "Preparing to send payment...",
  "@preparingToSendPayment": {
    "description": "Status message shown before attempting to send the Lightning payment"
  },
  "sendingPayment": "Sending payment...",
  "@sendingPayment": {
    "description": "Status message shown while the Lightning payment is being sent"
  },
  "paymentFailed": "Payment Failed",
  "@paymentFailed": {
    "description": "Status message indicating the Lightning payment failed"
  },
  "errorSendingPayment": "Error sending payment: {details}",
  "@errorSendingPayment": {
    "description": "Error message shown when sending the Lightning payment fails",
    "placeholders": {
      "details": {}
    }
  },
  "errorOfferNotConfirmed": "Offer not confirmed by maker.",
  "@errorOfferNotConfirmed": {
    "description": "Error message when the offer status is not 'Confirmed' when expected"
  },
  "errorOfferExpired": "Offer expired.",
  "@errorOfferExpired": {
    "description": "Error message when the offer has expired"
  },
  "errorOfferCancelled": "Offer cancelled.",
  "@errorOfferCancelled": {
    "description": "Error message when the offer has been cancelled"
  },
  "errorOfferPaymentFailed": "Offer payment failed.",
  "@errorOfferPaymentFailed": {
    "description": "Error message when the offer status indicates payment failure"
  },
  "errorOfferUnknown": "Unknown offer error.",
  "@errorOfferUnknown": {
    "description": "Generic error message for unknown offer issues"
  },
  "errorOfferUnexpectedStateWithStatus": "Offer is in an unexpected state ({status}).",
  "@errorOfferUnexpectedStateWithStatus": {
    "description": "Error shown when the offer is found in an unexpected state during build or processing",
    "placeholders": {
      "status": {}
    }
  },
  "offerStatusLabel": "Offer Status: {status}",
  "@offerStatusLabel": {
    "description": "Label displaying the current offer status",
    "placeholders": {
      "status": {}
    }
  },
  "waitingMakerConfirmation": "Waiting for Maker confirmation: {seconds} s",
  "@waitingMakerConfirmation": {
    "description": "Countdown timer showing time left for maker confirmation",
    "placeholders": {
      "seconds": {
        "type": "int"
      }
    }
  },
  "importantBlikAmountConfirmation": "VERY IMPORTANT: Be sure to accept only BLIK confirmation for amount of {amount} {currency}",
  "@importantBlikAmountConfirmation": {
    "description": "Important instruction for the taker about confirming the correct BLIK amount",
    "placeholders": {
      "amount": {
        "type": "String"
      },
      "currency": {
        "type": "String"
      }
    }
  },
  "blikInstructionsTaker": "The offer maker has been sent your BLIK code and needs to enter it in the payment terminal. You then will need to accept the BLIK code in your bank app, be sure to only accept the correct amount. You will receive the Lightning payment automatically after confirmation.",
  "@blikInstructionsTaker": {
    "description": "Detailed instructions for the taker while waiting for confirmation"
  },
  "submitBlikWithinSeconds": "Submit BLIK within: {seconds} s",
  "@submitBlikWithinSeconds": {
    "description": "Countdown timer text in the progress bar for submitting BLIK",
    "placeholders": {
      "seconds": {
        "type": "int"
      }
    }
  },
  "errorFetchedOfferIdMismatch": "Fetched active offer ID ({fetchedId}) does not match initial offer ID ({initialId}). State mismatch?",
  "@errorFetchedOfferIdMismatch": {
    "description": "Error when the fetched offer ID doesn't match the expected one",
    "placeholders": {
      "fetchedId": {},
      "initialId": {}
    }
  },
  "errorOfferNotReserved": "Offer is no longer in reserved state ({status}).",
  "@errorOfferNotReserved": {
    "description": "Error when trying to submit BLIK but the offer is not reserved",
    "placeholders": {
      "status": {}
    }
  },
  "errorOfferReservationTimestampMissing": "Offer reservation timestamp is missing.",
  "@errorOfferReservationTimestampMissing": {
    "description": "Error when the reservedAt field is unexpectedly null"
  },
  "errorOfferPaymentHashMissing": "Offer payment hash is missing after fetch.",
  "@errorOfferPaymentHashMissing": {
    "description": "Error when the payment hash is missing after fetching full offer details"
  },
  "errorLoadingOfferDetails": "Error loading offer details: {details}",
  "@errorLoadingOfferDetails": {
    "description": "Generic error message when fetching full offer details fails",
    "placeholders": {
      "details": {}
    }
  },
  "blikInputTimeExpired": "BLIK input time expired.",
  "@blikInputTimeExpired": {
    "description": "Message shown when the 20-second timer for BLIK input runs out"
  },
  "errorOfferStateChanged": "Error: Offer state changed.",
  "@errorOfferStateChanged": {
    "description": "Error shown when the offer state changes unexpectedly during BLIK submission"
  },
  "errorOfferStateNotValid": "Error: Offer state is no longer valid.",
  "@errorOfferStateNotValid": {
    "description": "Error shown when trying to submit BLIK but the offer state is invalid"
  },
  "errorInvalidBlikFormat": "Please enter a valid 6-digit BLIK code.",
  "@errorInvalidBlikFormat": {
    "description": "Validation error for the BLIK code input field"
  },
  "errorLightningAddressRequired": "Lightning Address is required.",
  "@errorLightningAddressRequired": {
    "description": "Error shown if the user cancels the LN Address prompt"
  },
  "errorSubmittingBlik": "Error submitting BLIK: {details}",
  "@errorSubmittingBlik": {
    "description": "Error shown when the API call to submit BLIK fails",
    "placeholders": {
      "details": {}
    }
  },
  "blikPasted": "Pasted BLIK code.",
  "@blikPasted": {
    "description": "Snackbar message confirming successful paste of BLIK code"
  },
  "errorClipboardInvalidBlik": "Clipboard does not contain a valid 6-digit BLIK code.",
  "@errorClipboardInvalidBlik": {
    "description": "Snackbar message when pasted content is not a valid BLIK code"
  },
  "errorOfferDetailsNotLoaded": "Offer details could not be loaded.",
  "@errorOfferDetailsNotLoaded": {
    "description": "Fallback text shown if offer details fail to load for the screen"
  },
  "selectedOfferLabel": "Selected Offer:",
  "@selectedOfferLabel": {
    "description": "Label above the selected offer details card"
  },
  "offerDetailsSubtitle": "{sats} + {fee} (fee) sats\nStatus: {status}",
  "@offerDetailsSubtitle": {
    "description": "Subtitle for the offer card showing sats, fee, and status",
    "placeholders": {
      "sats": {
        "type": "int"
      },
      "fee": {
        "type": "int"
      },
      "status": {
        "type": "String"
      }
    }
  },
  "enterBlikCodeLabel": "Enter 6-digit BLIK Code:",
  "@enterBlikCodeLabel": {
    "description": "Label instructing the user to enter the BLIK code"
  },
  "blikCodeLabel": "BLIK Code",
  "@blikCodeLabel": {
    "description": "Label for the BLIK code input field"
  },
  "pasteFromClipboardTooltip": "Paste from Clipboard",
  "@pasteFromClipboardTooltip": {
    "description": "Tooltip for the paste button next to the BLIK input"
  },
  "submitBlikButton": "Submit BLIK",
  "@submitBlikButton": {
    "description": "Text for the button to submit the BLIK code"
  },
  "errorCheckingActiveOffers": "Error checking active offers: {details}",
  "@errorCheckingActiveOffers": {
    "description": "Error message shown when fetching initial active offers fails",
    "placeholders": {
      "details": {}
    }
  },
  "payWithLightningButton": "PAY with Lightning",
  "@payWithLightningButton": {
    "description": "Button text for the Maker role (paying with LN)"
  },
  "sellBlikButton": "SELL BLIK code for sats",
  "@sellBlikButton": {
    "description": "Button text for the Taker role (selling BLIK for sats)"
  },
  "activeOfferTitle": "You have an active offer:",
  "@activeOfferTitle": {
    "description": "Title indicating the user has an active offer"
  },
  "roleLabel": "Role: {role}",
  "@roleLabel": {
    "description": "Label showing the user's role in the active offer",
    "placeholders": {
      "role": {
        "type": "String"
      }
    }
  },
  "roleMaker": "Maker",
  "@roleMaker": {
    "description": "The Maker role name"
  },
  "roleTaker": "Taker",
  "@roleTaker": {
    "description": "The Taker role name"
  },
  "activeOfferSubtitle": "Status: {status}\nAmount: {amount} sats",
  "@activeOfferSubtitle": {
    "description": "Subtitle for the active offer card showing status and amount",
    "placeholders": {
      "status": {
        "type": "String"
      },
      "amount": {
        "type": "int"
      }
    }
  },
  "lightningAddressLabelShort": "Lightning address: {address}",
  "@lightningAddressLabelShort": {
    "description": "Label showing the taker's LN address in the active offer card (e.g., for failed payments)",
    "placeholders": {
      "address": {
        "type": "String"
      }
    }
  },
  "errorMakerPublicKeyNotFound": "Maker public key not found",
  "@errorMakerPublicKeyNotFound": {
    "description": "Error when trying to resume a maker offer but the public key is missing"
  },
  "errorResumingOffer": "Error resuming offer: {details}",
  "@errorResumingOffer": {
    "description": "Snackbar message when resuming an active offer fails",
    "placeholders": {
      "details": {}
    }
  },
  "errorLoadingFinishedOffers": "Error loading finished offers: {details}",
  "@errorLoadingFinishedOffers": {
    "description": "Error message shown when fetching finished offers fails",
    "placeholders": {
      "details": {}
    }
  },
  "finishedOffersTitle": "Finished Offers (last 24h):",
  "@finishedOffersTitle": {
    "description": "Title for the section showing recently finished offers"
  },
  "finishedOfferSubtitle": "{sats} + {fee} (fee) sats\nStatus: {status}\nPaid at: {date}",
  "@finishedOfferSubtitle": {
    "description": "Subtitle for a finished offer card showing details and payment time",
    "placeholders": {
      "sats": {
        "type": "int"
      },
      "fee": {
        "type": "int"
      },
      "status": {
        "type": "String"
      },
      "date": {
        "type": "String"
      }
    }
  },
  "errorCannotResumeOfferState": "Cannot resume offer in state: {status}",
  "@errorCannotResumeOfferState": {
    "description": "Snackbar message when trying to resume an offer in an unsupported state",
    "placeholders": {
      "status": {}
    }
  },
  "errorCannotResumeTakerOfferState": "Cannot resume Taker offer in state: {status}",
  "@errorCannotResumeTakerOfferState": {
    "description": "Snackbar message when trying to resume a Taker offer in an unsupported state",
    "placeholders": {
      "status": {}
    }
  },
  "paymentFailedTitle": "Payment Failed",
  "@paymentFailedTitle": {
    "description": "Title for the payment failed screen (AppBar and Headline)"
  },
  "paymentFailedInstructions": "Please provide a new Lightning invoice for the amount of {netAmount} sats.",
  "@paymentFailedInstructions": {
    "description": "Instructions on the payment failed screen explaining the situation and asking for a new invoice",
    "placeholders": {
      "netAmount": {
        "type": "int"
      }
    }
  },
  "newLightningInvoiceLabel": "New Lightning Invoice",
  "@newLightningInvoiceLabel": {
    "description": "Label for the text field where the user enters a new invoice"
  },
  "newLightningInvoiceHint": "Enter your BOLT11 invoice",
  "@newLightningInvoiceHint": {
    "description": "Hint text for the new invoice text field"
  },
  "errorEnterValidInvoice": "Please enter a valid invoice",
  "@errorEnterValidInvoice": {
    "description": "Snackbar validation error when the new invoice field is empty"
  },
  "errorUpdatingInvoice": "Error updating invoice: {details}",
  "@errorUpdatingInvoice": {
    "description": "Snackbar error message when submitting the new invoice fails",
    "placeholders": {
      "details": {}
    }
  },
  "submitNewInvoiceButton": "Submit New Invoice",
  "@submitNewInvoiceButton": {
    "description": "Button text to submit the newly entered invoice"
  },
  "offerCompletedTitle": "Offer Completed",
  "@offerCompletedTitle": {
    "description": "AppBar title for the success screen"
  },
  "paymentConfirmedHeadline": "Payment Confirmed!",
  "@paymentConfirmedHeadline": {
    "description": "Headline text on the success screen"
  },
  "takerPaidSubtitle": "The Taker has been paid.",
  "@takerPaidSubtitle": {
    "description": "Subtitle text on the success screen confirming taker payment"
  },
  "offerDetailsTitle": "Offer Details:",
  "@offerDetailsTitle": {
    "description": "Title for the card showing completed offer details"
  },
  "offerIdLabel": "Offer ID: {id}...",
  "@offerIdLabel": {
    "description": "Label showing the truncated Offer ID in the details card",
    "placeholders": {
      "id": {
        "type": "String"
      }
    }
  },
  "errorLoadingLightningAddress": "Error loading Lightning Address: {details}",
  "@errorLoadingLightningAddress": {
    "description": "Error message when fetching the saved Lightning Address fails",
    "placeholders": {
      "details": {}
    }
  },
  "validLightningAddressTooltip": "Valid Lightning Address",
  "@validLightningAddressTooltip": {
    "description": "Tooltip for the green checkmark indicating a valid LN Address"
  },
  "errorFailedToReserveOfferNoTimestamp": "Failed to reserve offer (no timestamp returned).",
  "@errorFailedToReserveOfferNoTimestamp": {
    "description": "Error message when reserving an offer succeeds but doesn't return a timestamp"
  },
  "errorFailedToReserveOffer": "Failed to reserve offer: {details}",
  "@errorFailedToReserveOffer": {
    "description": "Generic error message when reserving an offer fails",
    "placeholders": {
      "details": {}
    }
  },
  "progressWaitingForTaker": "Waiting for taker: {time}",
  "@progressWaitingForTaker": {
    "description": "Text inside the progress bar when an offer is funded and waiting for a taker",
    "placeholders": {
      "time": {
        "type": "String",
        "example": "09:59"
      }
    }
  },
  "progressReserved": "Reserved: {seconds} s left",
  "@progressReserved": {
    "description": "Text inside the progress bar when an offer is reserved by a taker",
    "placeholders": {
      "seconds": {
        "type": "int"
      }
    }
  },
  "progressConfirming": "Confirming: {seconds} s left",
  "@progressConfirming": {
    "description": "Text inside the progress bar when waiting for the maker to confirm payment after BLIK is received",
    "placeholders": {
      "seconds": {
        "type": "int"
      }
    }
  },
  "errorNoPublicKey": "Error: Could not retrieve your public key.",
  "@errorNoPublicKey": {
    "description": "Error message when the public key cannot be retrieved"
  },
  "waitingForOfferUpdate": "Waiting for offer update...",
  "@waitingForOfferUpdate": {
    "description": "Status message when polling for offer updates but no offer is currently found or in expected state"
  },
  "loadingPublicKey": "Loading your details...",
  "@loadingPublicKey": {
    "description": "Status message while waiting for the public key to load"
  },
  "errorLoadingPublicKey": "Error loading your details",
  "@errorLoadingPublicKey": {
    "description": "Error message when loading the public key fails"
  },
  "errorMissingPaymentHash": "Error: Payment details are missing.",
  "@errorMissingPaymentHash": {
    "description": "Error shown when the payment hash is missing for the payment process screen"
  },
  "taskMakerConfirmedBlik": "Maker confirmed BLIK payment success",
  "@taskMakerConfirmedBlik": {
    "description": "Checklist item: Maker confirmed BLIK payment"
  },
  "taskMakerInvoiceSettled": "Maker hold invoice settled",
  "@taskMakerInvoiceSettled": {
    "description": "Checklist item: Maker's hold invoice is settled"
  },
  "taskPayingTakerInvoice": "Generating & paying your invoice",
  "@taskPayingTakerInvoice": {
    "description": "Checklist item: System is paying the taker's invoice"
  },
  "taskTakerInvoicePaid": "Your invoice paid successfully",
  "@taskTakerInvoicePaid": {
    "description": "Checklist item: Taker's invoice has been paid"
  },
  "taskTakerPaymentFailed": "Payment to you failed",
  "@taskTakerPaymentFailed": {
    "description": "Checklist item: Payment to the taker failed (used primarily for state mapping)"
  },
  "errorTakerPaymentFailed": "Payment to your Lightning Address failed. Please check the details and provide a new invoice if necessary.",
  "@errorTakerPaymentFailed": {
    "description": "Error message shown below the failed checklist item"
  },
  "goToFailureDetails": "Go to Failure Details",
  "@goToFailureDetails": {
    "description": "Button text to navigate to the payment failure screen"
  },
  "errorTakerPublicKeyNotFound": "Taker public key not found.",
  "@errorTakerPublicKeyNotFound": {
    "description": "Error when the taker's public key is missing during payment retry."
  },
  "paymentRetryFailedError": "Payment retry failed. Please check the invoice or try again later.",
  "@paymentRetryFailedError": {
    "description": "Error message shown when the payment retry attempt still results in failure."
  },
  "paymentSuccessfulTitle": "Payment Successful",
  "@paymentSuccessfulTitle": {
    "description": "Title for the screen when the taker payment succeeds after a retry."
  },
  "paymentSuccessfulMessage": "Your payment has been processed successfully.",
  "@paymentSuccessfulMessage": {
    "description": "Message confirming successful payment after a retry."
  },
  "goToHomeButton": "Go to Home",
  "@goToHomeButton": {
    "description": "Button text to navigate back to the home screen after successful payment retry."
  },
  "makerInvalidBlikTitle": "Invalid BLIK Code",
  "@makerInvalidBlikTitle": {
    "description": "Title for the screen when the maker marks the BLIK code as invalid"
  },
  "makerInvalidBlikInfo": "You marked the BLIK code as invalid. Waiting for the taker to provide a new code or initiate a dispute.",
  "@makerInvalidBlikInfo": {
    "description": "Informational text shown to the maker after marking the BLIK code as invalid"
  },
  "genericError": "An unexpected error occurred. Please try again.",
  "@genericError": {
    "description": "Generic error message"
  },
  "makerInvalidBlikButton": "Invalid BLIK Code",
  "@makerInvalidBlikButton": {
    "description": "Button text for the maker to mark the received BLIK code as invalid"
  },
  "invalidBlikTitle": "Invalid BLIK Code",
  "@invalidBlikTitle": {
    "description": "Title for the screen shown to the Taker when the Maker marks the BLIK as invalid"
  },
  "invalidBlikMessage": "Maker Rejected BLIK Code",
  "@invalidBlikMessage": {
    "description": "Headline message shown to the Taker when the Maker marks the BLIK as invalid"
  },
  "invalidBlikExplanation": "The Maker has indicated that the BLIK code you provided was invalid or did not work. What would you like to do?",
  "@invalidBlikExplanation": {
    "description": "Explanation shown to the Taker about why they are seeing this screen"
  },
  "invalidBlikRetryButton": "I DID NOT PAY, reserve Offer again and submit a new BLIK Code",
  "@invalidBlikRetryButton": {
    "description": "Button text for the Taker to try submitting a new BLIK code"
  },
  "invalidBlikConflictButton": "I CONFIRMED THE BLIK CODE AND IT GOT CHARGED FROM MY BANK ACCOUNT, Report Conflict, will cause DISPUTE!",
  "@invalidBlikConflictButton": {
    "description": "Button text for the Taker to report a conflict if they believe they paid successfully"
  },
  "cancelAndReturnHome": "Return Home",
  "@cancelAndReturnHome": {
    "description": "Button text to cancel the current flow and return to the home/offer list screen"
  },
  "conflictReportedSuccess": "Conflict reported. The coordinator will review the case.",
  "@conflictReportedSuccess": {
    "description": "Snackbar message shown to the Taker after successfully reporting a conflict"
  },
  "conflictReportError": "Error reporting conflict: {details}",
  "@conflictReportError": {
    "description": "Snackbar message shown to the Taker when reporting a conflict fails",
    "placeholders": {
      "details": {}
    }
  },
  "takerConflictTitle": "Offer Conflict",
  "@takerConflictTitle": {
    "description": "AppBar title for the Taker conflict screen"
  },
  "takerConflictHeadline": "Offer Conflict Reported",
  "@takerConflictHeadline": {
    "description": "Headline text on the Taker conflict screen"
  },
  "takerConflictBody": "The Maker marked the BLIK code as invalid, but you have reported a conflict, indicating you believe the payment was successful.",
  "@takerConflictBody": {
    "description": "Main informational text on the Taker conflict screen"
  },
  "takerConflictInstructions": "Please wait for the coordinator to review the situation. You may be contacted for more details. Check back later or contact support if needed.",
  "@takerConflictInstructions": {
    "description": "Instructions for the Taker on the conflict screen"
  },
  "takerConflictBackButton": "Return to Home",
  "@takerConflictBackButton": {
    "description": "Button text on the Taker conflict screen to go back to the main screen"
  },
  "makerConflictTitle": "Offer Conflict",
  "@makerConflictTitle": {
    "description": "AppBar title for the Maker conflict screen"
  },
  "makerConflictHeadline": "Offer Conflict Reported",
  "@makerConflictHeadline": {
    "description": "Headline text on the Maker conflict screen"
  },
  "makerConflictBody": "You marked the BLIK code as invalid, but the Taker has reported a conflict, indicating they believe the payment was successful.",
  "@makerConflictBody": {
    "description": "Main informational text on the Maker conflict screen"
  },
  "makerConflictInstructions": "Please wait for the coordinator to review the situation. You may be contacted for more details. Check back later or contact support if needed.",
  "@makerConflictInstructions": {
    "description": "Instructions for the Maker on the conflict screen"
  },
  "makerConflictBackButton": "Return to Home",
  "@makerConflictBackButton": {
    "description": "Button text on the Maker conflict screen to go back to the main screen"
  },
  "makerConflictConfirmPaymentButton": "My mistake, confirm BLIK payment success",
  "@makerConflictConfirmPaymentButton": {
    "description": "Button on Maker conflict screen to admit mistake and confirm payment"
  },
  "makerConflictOpenDisputeButton": "Blik payment did NOT succeed, OPEN DISPUTE",
  "@makerConflictOpenDisputeButton": {
    "description": "Button on Maker conflict screen to open a dispute"
  },
  "makerConflictDisputeDialogTitle": "Open Dispute?",
  "@makerConflictDisputeDialogTitle": {
    "description": "Title for the dispute confirmation dialog"
  },
  "makerConflictDisputeDialogContent": "Opening a dispute requires manual review by the coordinator, which may take time. A dispute fee will be deducted if the dispute is resolved against you. The hold invoice will be settled to prevent expiry. If resolved in your favor, you will be refunded (minus fees) to your Lightning Address.",
  "@makerConflictDisputeDialogContent": {
    "description": "Content explaining the consequences of opening a dispute"
  },
  "makerConflictDisputeDialogConfirm": "Open Dispute",
  "@makerConflictDisputeDialogConfirm": {
    "description": "Confirm button text for the dispute dialog"
  },
  "makerConflictDisputeDialogCancel": "Cancel",
  "@makerConflictDisputeDialogCancel": {
    "description": "Cancel button text for the dispute dialog"
  },
  "makerConflictDisputeDialogContentDetailed": "Opening a dispute will require manual intervention by the coordinator, which will take time and incur a dispute fee.\n\nThe hold invoice will be settled immediately to prevent expiry before the dispute is resolved.\n\nIf the dispute is resolved in your favor, the sats amount will be refunded to your Lightning Address (minus dispute fees). Please ensure you have a Lightning Address configured.",
  "@makerConflictDisputeDialogContentDetailed": {
    "description": "Detailed content explaining the consequences of opening a dispute in the Maker Conflict screen"
  },
  "makerConflictSubmitDisputeButton": "Submit Dispute",
  "@makerConflictSubmitDisputeButton": {
    "description": "Button text in the Lightning Address dialog when submitting a dispute"
  },
  "errorOpenDispute": "Error opening dispute: {error}",
  "@errorOpenDispute": {
    "description": "Error message when opening a dispute fails",
    "placeholders": {
      "error": {
        "type": "String"
      }
    }
  },
  "successOpenDispute": "Dispute opened successfully. The coordinator will review the case.",
  "@successOpenDispute": {
    "description": "Success message after opening a dispute"
  },
  "errorLoadingTimeoutConfiguration": "Error loading timeout configuration.",
  "@errorLoadingTimeoutConfiguration": {
    "description": "Error message when the coordinator's timeout configuration cannot be loaded"
  },
  "errorAmountTooLowFiat": "Amount is too low. Minimum is {minAmount} {currency}.",
  "@errorAmountTooLowFiat": {
    "description": "Validation error when the entered fiat amount is below the minimum allowed",
    "placeholders": {
      "minAmount": {
        "type": "String"
      },
      "currency": {
        "type": "String"
      }
    }
  },
  "errorAmountTooHighFiat": "Amount is too high. Maximum is {maxAmount} {currency}.",
  "@errorAmountTooHighFiat": {
    "description": "Validation error when the entered fiat amount is above the maximum allowed",
    "placeholders": {
      "maxAmount": {
        "type": "String"
      },
      "currency": {
        "type": "String"
      }
    }
  },
  "amountRangeHint": "Min: {minAmount} {currency}, Max: {maxAmount} {currency}",
  "@amountRangeHint": {
    "description": "Hint text displaying the allowed fiat amount range under an input field",
    "placeholders": {
      "minAmount": {
        "type": "String"
      },
      "maxAmount": {
        "type": "String"
      },
      "currency": {
        "type": "String"
      }
    }
  },
  "errorLoadingCoordinatorConfig": "Error loading coordinator configuration. Please try again.",
  "@errorLoadingCoordinatorConfig": {
    "description": "Error message when fetching coordinator configuration fails"
  }
}
